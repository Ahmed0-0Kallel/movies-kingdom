name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE_NAME: oussamf/carthagians

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./client
          file: ./client/DockerFile.prod
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}
          build-args: REACT_APP_TMDB_KEY=${{ secrets.REACT_APP_TMDB_KEY }}

      - name: Build and test Docker image
        run: |
          docker run -t -d --name test-container $DOCKER_IMAGE_NAME npm test
          docker logs -f test-container > test-results.txt
          docker rm test-container

      - name: Check test status
        id: check-tests
        run: |
          test_results=$(cat test-results.txt)
          if [[ $test_results == *"FAIL"* ]]; then
            echo "Tests failed. Skipping deployment."
            echo "::set-output name=tests-passed::false"
          else
            echo "Tests passed. Proceeding with deployment."
            echo "::set-output name=tests-passed::true"
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker image from Docker Hub
        run: docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Tag Docker image for GitHub Packages
        run: docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest ghcr.io/${{ github.repository }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Push Docker image to GitHub Packages
        run: docker push ghcr.io/${{ github.repository }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Create Docker container
        run: docker create --name react_app_container ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Copy built React app from Docker container
        run: docker cp react_app_container:/usr/share/nginx/html ./build

      - name: Remove Docker container
        run: docker rm react_app_container

      - name: Deploy to GitHub Pages
        if: steps.check-tests.outputs.tests-passed == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
